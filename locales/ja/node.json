{
    "ThingsboardPeRestApi": {
        "label": {
            "service": "サービス",
            "method": "メソッド",
            "host": "ホスト",
            "header": "ヘッダ",
            "value": "値",
            "isQuery": "クエリ"
        },
        "status": {
            "requesting": "要求中"
        },
        "parameters": {
            "getSecuritySettingsUsingGET": "GET /api/admin/securitySettings",
            "saveSecuritySettingsUsingPOST": "POST /api/admin/securitySettings",
            "body": "body",
            "saveAdminSettingsUsingPOST": "POST /api/admin/settings",
            "sendTestMailUsingPOST": "POST /api/admin/settings/testMail",
            "sendTestSmsUsingPOST": "POST /api/admin/settings/testSms",
            "getAdminSettingsUsingGET": "GET /api/admin/settings/{key}{?systemByDefault}",
            "key": "key",
            "systemByDefault": "systemByDefault",
            "checkUpdatesUsingGET": "GET /api/admin/updates",
            "loginPost": "POST /api/auth/login",
            "saveAlarmUsingPOST": "POST /api/alarm",
            "getHighestAlarmSeverityUsingGET": "GET /api/alarm/highestSeverity/{entityType}/{entityId}{?searchStatus,status}",
            "entityType": "entityType",
            "entityId": "entityId",
            "searchStatus": "searchStatus",
            "status": "status",
            "getAlarmInfoByIdUsingGET": "GET /api/alarm/info/{alarmId}",
            "alarmId": "alarmId",
            "getAlarmByIdUsingGET": "GET /api/alarm/{alarmId}",
            "deleteAlarmUsingDELETE": "DELETE /api/alarm/{alarmId}",
            "ackAlarmUsingPOST": "POST /api/alarm/{alarmId}/ack",
            "clearAlarmUsingPOST": "POST /api/alarm/{alarmId}/clear",
            "getAlarmsUsingGET": "GET /api/alarm/{entityType}/{entityId}{?endTime,fetchOriginator,page,pageSize,searchStatus,sortOrder,sortProperty,startTime,status,textSearch}",
            "pageSize": "pageSize",
            "page": "page",
            "textSearch": "textSearch",
            "sortProperty": "sortProperty",
            "sortOrder": "sortOrder",
            "startTime": "startTime",
            "endTime": "endTime",
            "fetchOriginator": "fetchOriginator",
            "getAllAlarmsUsingGET": "GET /api/alarms{?endTime,fetchOriginator,page,pageSize,searchStatus,sortOrder,sortProperty,startTime,status,textSearch}",
            "processAssetBulkImportUsingPOST": "POST /api/asset/bulk_import",
            "getAssetTypesUsingGET": "GET /api/asset/types",
            "getAssetByIdUsingGET": "GET /api/asset/{assetId}",
            "assetId": "assetId",
            "deleteAssetUsingDELETE": "DELETE /api/asset/{assetId}",
            "findByQueryUsingPOST": "POST /api/assets",
            "getAssetsByIdsUsingGET": "GET /api/assets{?assetIds}",
            "assetIds": "assetIds",
            "saveAssetUsingPOST": "POST /api/asset{?entityGroupId}",
            "entityGroupId": "entityGroupId",
            "getCustomerAssetsUsingGET": "GET /api/customer/{customerId}/assets{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "customerId": "customerId",
            "type": "type",
            "getAssetsByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/assets{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantAssetUsingGET": "GET /api/tenant/assets{?assetName}",
            "assetName": "assetName",
            "getTenantAssetsUsingGET": "GET /api/tenant/assets{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getUserAssetsUsingGET": "GET /api/user/assets{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getAuditLogsByCustomerIdUsingGET": "GET /api/audit/logs/customer/{customerId}{?actionTypes,endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch}",
            "actionTypes": "actionTypes",
            "getAuditLogsByEntityIdUsingGET": "GET /api/audit/logs/entity/{entityType}/{entityId}{?actionTypes,endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch}",
            "getAuditLogsByUserIdUsingGET": "GET /api/audit/logs/user/{userId}{?actionTypes,endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch}",
            "userId": "userId",
            "getAuditLogsUsingGET": "GET /api/audit/logs{?actionTypes,endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch}",
            "changePasswordUsingPOST": "POST /api/auth/changePassword",
            "logoutUsingPOST": "POST /api/auth/logout",
            "getUserUsingGET": "GET /api/auth/user",
            "checkActivateTokenUsingGET": "GET /api/noauth/activate{?activateToken}",
            "activateToken": "activateToken",
            "activateUserUsingPOST": "POST /api/noauth/activate{?sendActivationMail}",
            "sendActivationMail": "sendActivationMail",
            "resetPasswordUsingPOST": "POST /api/noauth/resetPassword",
            "requestResetPasswordByEmailUsingPOST": "POST /api/noauth/resetPasswordByEmail",
            "checkResetTokenUsingGET": "GET /api/noauth/resetPassword{?resetToken}",
            "resetToken": "resetToken",
            "getUserPasswordPolicyUsingGET": "GET /api/noauth/userPasswordPolicy",
            "getBlobEntitiesByIdsUsingGET": "GET /api/blobEntities{?blobEntityIds}",
            "blobEntityIds": "blobEntityIds",
            "getBlobEntitiesUsingGET": "GET /api/blobEntities{?endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch,type}",
            "getBlobEntityInfoByIdUsingGET": "GET /api/blobEntity/info/{blobEntityId}",
            "blobEntityId": "blobEntityId",
            "deleteBlobEntityUsingDELETE": "DELETE /api/blobEntity/{blobEntityId}",
            "downloadBlobEntityUsingGET": "GET /api/blobEntity/{blobEntityId}/download",
            "getComponentDescriptorByClazzUsingGET": "GET /api/component/{componentDescriptorClazz}",
            "componentDescriptorClazz": "componentDescriptorClazz",
            "getComponentDescriptorsByTypeUsingGET": "GET /api/components/{componentType}{?ruleChainType}",
            "componentType": "componentType",
            "ruleChainType": "ruleChainType",
            "getComponentDescriptorsByTypesUsingGET": "GET /api/components{?componentTypes,ruleChainType}",
            "componentTypes": "componentTypes",
            "saveConverterUsingPOST": "POST /api/converter",
            "testDownLinkConverterUsingPOST": "POST /api/converter/testDownLink",
            "testUpLinkConverterUsingPOST": "POST /api/converter/testUpLink",
            "getConverterByIdUsingGET": "GET /api/converter/{converterId}",
            "converterId": "converterId",
            "deleteConverterUsingDELETE": "DELETE /api/converter/{converterId}",
            "getLatestConverterDebugInputUsingGET": "GET /api/converter/{converterId}/debugIn",
            "getConvertersByIdsUsingGET": "GET /api/converters{?converterIds}",
            "converterIds": "converterIds",
            "getConvertersUsingGET": "GET /api/converters{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getCurrentCustomMenuUsingGET": "GET /api/customMenu/currentCustomMenu",
            "getCustomMenuUsingGET": "GET /api/customMenu/customMenu",
            "saveCustomMenuUsingPOST": "POST /api/customMenu/customMenu",
            "getCurrentCustomTranslationUsingGET": "GET /api/customTranslation/currentCustomTranslation",
            "getCustomTranslationUsingGET": "GET /api/customTranslation/customTranslation",
            "saveCustomTranslationUsingPOST": "POST /api/customTranslation/customTranslation",
            "getCustomerByIdUsingGET": "GET /api/customer/{customerId}",
            "deleteCustomerUsingDELETE": "DELETE /api/customer/{customerId}",
            "getShortCustomerInfoByIdUsingGET": "GET /api/customer/{customerId}/shortInfo",
            "getCustomerTitleByIdUsingGET": "GET /api/customer/{customerId}/title",
            "getCustomersByIdsUsingGET": "GET /api/customers{?customerIds}",
            "customerIds": "customerIds",
            "getCustomersUsingGET": "GET /api/customers{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "saveCustomerUsingPOST": "POST /api/customer{?entityGroupId}",
            "getCustomersByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/customers{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantCustomerUsingGET": "GET /api/tenant/customers{?customerTitle}",
            "customerTitle": "customerTitle",
            "getUserCustomersUsingGET": "GET /api/user/customers{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getCustomerHomeDashboardInfoUsingGET": "GET /api/customer/dashboard/home/info",
            "setCustomerHomeDashboardInfoUsingPOST": "POST /api/customer/dashboard/home/info",
            "getHomeDashboardUsingGET": "GET /api/dashboard/home",
            "getHomeDashboardInfoUsingGET": "GET /api/dashboard/home/info",
            "getDashboardInfoByIdUsingGET": "GET /api/dashboard/info/{dashboardId}",
            "dashboardId": "dashboardId",
            "getMaxDatapointsLimitUsingGET": "GET /api/dashboard/maxDatapointsLimit",
            "getServerTimeUsingGET": "GET /api/dashboard/serverTime",
            "getDashboardByIdUsingGET": "GET /api/dashboard/{dashboardId}",
            "deleteDashboardUsingDELETE": "DELETE /api/dashboard/{dashboardId}",
            "getDashboardsByIdsUsingGET": "GET /api/dashboards{?dashboardIds}",
            "dashboardIds": "dashboardIds",
            "saveDashboardUsingPOST": "POST /api/dashboard{?entityGroupId}",
            "exportGroupDashboardsUsingGET": "GET /api/entityGroup/{entityGroupId}/dashboards/export{?limit}",
            "limit": "limit",
            "importGroupDashboardsUsingPOST": "POST /api/entityGroup/{entityGroupId}/dashboards/import{?overwrite}",
            "overwrite": "overwrite",
            "getDashboardsByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/dashboards{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantHomeDashboardInfoUsingGET": "GET /api/tenant/dashboard/home/info",
            "setTenantHomeDashboardInfoUsingPOST": "POST /api/tenant/dashboard/home/info",
            "getTenantDashboardsUsingGET": "GET /api/tenant/dashboards{?mobile,page,pageSize,sortOrder,sortProperty,textSearch}",
            "mobile": "mobile",
            "getTenantDashboardsUsingGET_1": "GET /api/tenant/{tenantId}/dashboards{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "tenantId": "tenantId",
            "getUserDashboardsUsingGET": "GET /api/user/dashboards{?mobile,operation,page,pageSize,sortOrder,sortProperty,textSearch,userId}",
            "operation": "operation",
            "reClaimDeviceUsingDELETE": "DELETE /api/customer/device/{deviceName}/claim",
            "deviceName": "deviceName",
            "claimDeviceUsingPOST": "POST /api/customer/device/{deviceName}/claim{?subCustomerId}",
            "subCustomerId": "subCustomerId",
            "getCustomerDevicesUsingGET": "GET /api/customer/{customerId}/devices{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "saveDeviceWithCredentialsUsingPOST": "POST /api/device-with-credentials{?entityGroupId}",
            "processDevicesBulkImportUsingPOST": "POST /api/device/bulk_import",
            "updateDeviceCredentialsUsingPOST": "POST /api/device/credentials",
            "getDeviceTypesUsingGET": "GET /api/device/types",
            "getDeviceByIdUsingGET": "GET /api/device/{deviceId}",
            "deviceId": "deviceId",
            "deleteDeviceUsingDELETE": "DELETE /api/device/{deviceId}",
            "getDeviceCredentialsByDeviceIdUsingGET": "GET /api/device/{deviceId}/credentials",
            "findByQueryUsingPOST_1": "POST /api/devices",
            "countByDeviceProfileAndEmptyOtaPackageUsingGET": "GET /api/devices/count/{otaPackageType}/{deviceProfileId}",
            "otaPackageType": "otaPackageType",
            "deviceProfileId": "deviceProfileId",
            "countByDeviceGroupAndEmptyOtaPackageUsingGET": "GET /api/devices/count/{otaPackageType}/{otaPackageId}/{entityGroupId}",
            "otaPackageId": "otaPackageId",
            "getDevicesByIdsUsingGET": "GET /api/devices{?deviceIds}",
            "deviceIds": "deviceIds",
            "saveDeviceUsingPOST": "POST /api/device{?accessToken,entityGroupId}",
            "accessToken": "accessToken",
            "getDevicesByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/devices{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantDeviceUsingGET": "GET /api/tenant/devices{?deviceName}",
            "getTenantDevicesUsingGET": "GET /api/tenant/devices{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "assignDeviceToTenantUsingPOST": "POST /api/tenant/{tenantId}/device/{deviceId}",
            "getUserDevicesUsingGET": "GET /api/user/devices{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "saveDeviceGroupOtaPackageUsingPOST": "POST /api/deviceGroupOtaPackage",
            "getFirmwareByIdUsingGET": "GET /api/deviceGroupOtaPackage/{groupId}/{firmwareType}",
            "groupId": "groupId",
            "firmwareType": "firmwareType",
            "deleteDeviceGroupOtaPackageUsingDELETE": "DELETE /api/deviceGroupOtaPackage/{id}",
            "id": "id",
            "saveDeviceProfileUsingPOST": "POST /api/deviceProfile",
            "getAttributesKeysUsingGET": "GET /api/deviceProfile/devices/keys/attributes{?deviceProfileId}",
            "getTimeseriesKeysUsingGET": "GET /api/deviceProfile/devices/keys/timeseries{?deviceProfileId}",
            "getDeviceProfileByIdUsingGET": "GET /api/deviceProfile/{deviceProfileId}",
            "deleteDeviceProfileUsingDELETE": "DELETE /api/deviceProfile/{deviceProfileId}",
            "setDefaultDeviceProfileUsingPOST": "POST /api/deviceProfile/{deviceProfileId}/default",
            "getDefaultDeviceProfileInfoUsingGET": "GET /api/deviceProfileInfo/default",
            "getDeviceProfileInfoByIdUsingGET": "GET /api/deviceProfileInfo/{deviceProfileId}",
            "getDeviceProfileInfosUsingGET": "GET /api/deviceProfileInfos{?page,pageSize,sortOrder,sortProperty,textSearch,transportType}",
            "transportType": "transportType",
            "getDeviceProfilesUsingGET": "GET /api/deviceProfiles{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getCustomerEdgesUsingGET": "GET /api/customer/{customerId}/edges{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "processEdgesBulkImportUsingPOST": "POST /api/edge/bulk_import",
            "findMissingToRelatedRuleChainsUsingGET": "GET /api/edge/missingToRelatedRuleChains/{edgeId}",
            "edgeId": "edgeId",
            "syncEdgeUsingPOST": "POST /api/edge/sync/{edgeId}",
            "getEdgeTypesUsingGET": "GET /api/edge/types",
            "getEdgeByIdUsingGET": "GET /api/edge/{edgeId}",
            "deleteEdgeUsingDELETE": "DELETE /api/edge/{edgeId}",
            "setEdgeRootRuleChainUsingPOST": "POST /api/edge/{edgeId}/{ruleChainId}/root",
            "ruleChainId": "ruleChainId",
            "findByQueryUsingPOST_2": "POST /api/edges",
            "isEdgesSupportEnabledUsingGET": "GET /api/edges/enabled",
            "getEdgesByIdsUsingGET": "GET /api/edges{?edgeIds}",
            "edgeIds": "edgeIds",
            "getEdgesUsingGET": "GET /api/edges{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "saveEdgeUsingPOST": "POST /api/edge{?entityGroupId}",
            "getEdgesByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/edges{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "activateInstanceUsingPOST": "POST /api/license/activateInstance{?licenseSecret,releaseDate}",
            "licenseSecret": "licenseSecret",
            "releaseDate": "releaseDate",
            "checkInstanceUsingPOST": "POST /api/license/checkInstance",
            "getTenantEdgeUsingGET": "GET /api/tenant/edges{?edgeName}",
            "edgeName": "edgeName",
            "getTenantEdgesUsingGET": "GET /api/tenant/edges{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getUserEdgesUsingGET": "GET /api/user/edges{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getEdgeEventsUsingGET": "GET /api/edge/{edgeId}/events{?endTime,page,pageSize,sortOrder,sortProperty,startTime,textSearch}",
            "getAllEdgeEntityGroupsUsingGET": "GET /api/allEntityGroups/edge/{edgeId}/{groupType}",
            "groupType": "groupType",
            "assignEntityGroupToEdgeUsingPOST": "POST /api/edge/{edgeId}/entityGroup/{entityGroupId}/{groupType}",
            "unassignEntityGroupFromEdgeUsingDELETE": "DELETE /api/edge/{edgeId}/entityGroup/{entityGroupId}/{groupType}",
            "saveEntityGroupUsingPOST": "POST /api/entityGroup",
            "getEntityGroupAllByOwnerAndTypeUsingGET": "GET /api/entityGroup/all/{ownerType}/{ownerId}/{groupType}",
            "ownerType": "ownerType",
            "ownerId": "ownerId",
            "getEntityGroupByIdUsingGET": "GET /api/entityGroup/{entityGroupId}",
            "deleteEntityGroupUsingDELETE": "DELETE /api/entityGroup/{entityGroupId}",
            "addEntitiesToEntityGroupUsingPOST": "POST /api/entityGroup/{entityGroupId}/addEntities",
            "removeEntitiesFromEntityGroupUsingPOST": "POST /api/entityGroup/{entityGroupId}/deleteEntities",
            "getEntitiesUsingGET": "GET /api/entityGroup/{entityGroupId}/entities{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "makeEntityGroupPrivateUsingPOST": "POST /api/entityGroup/{entityGroupId}/makePrivate",
            "makeEntityGroupPublicUsingPOST": "POST /api/entityGroup/{entityGroupId}/makePublic",
            "shareEntityGroupUsingPOST": "POST /api/entityGroup/{entityGroupId}/share",
            "getGroupEntityUsingGET": "GET /api/entityGroup/{entityGroupId}/{entityId}",
            "shareEntityGroupToChildOwnerUserGroupUsingPOST": "POST /api/entityGroup/{entityGroupId}/{userGroupId}/{roleId}/share",
            "userGroupId": "userGroupId",
            "roleId": "roleId",
            "getEntityGroupByOwnerAndNameAndTypeUsingGET": "GET /api/entityGroup/{ownerType}/{ownerId}/{groupType}/{groupName}",
            "groupName": "groupName",
            "getEdgeEntityGroupsUsingGET": "GET /api/entityGroups/edge/{edgeId}/{groupType}{?page,pageSize,sortOrder,sortProperty}",
            "getEntityGroupsForEntityUsingGET": "GET /api/entityGroups/{entityType}/{entityId}",
            "getEntityGroupsByTypeUsingGET": "GET /api/entityGroups/{groupType}",
            "getEntityGroupsByOwnerAndTypeUsingGET": "GET /api/entityGroups/{ownerType}/{ownerId}/{groupType}",
            "getEntityGroupsByIdsUsingGET": "GET /api/entityGroups{?entityGroupIds}",
            "entityGroupIds": "entityGroupIds",
            "getOwnersUsingGET": "GET /api/owners{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "findAlarmDataByQueryUsingPOST": "POST /api/alarmsQuery/find",
            "countEntitiesByQueryUsingPOST": "POST /api/entitiesQuery/count",
            "findEntityDataByQueryUsingPOST": "POST /api/entitiesQuery/find",
            "findEntityTimeseriesAndAttributesKeysByQueryUsingPOST": "POST /api/entitiesQuery/find/keys{?attributes,timeseries}",
            "timeseries": "timeseries",
            "attributes": "attributes",
            "saveRelationUsingPOST": "POST /api/relation",
            "findByQueryUsingPOST_3": "POST /api/relations",
            "findInfoByQueryUsingPOST": "POST /api/relations/info",
            "findInfoByFromUsingGET": "GET /api/relations/info{?fromId,fromType,relationTypeGroup}",
            "fromId": "fromId",
            "fromType": "fromType",
            "relationTypeGroup": "relationTypeGroup",
            "findInfoByToUsingGET": "GET /api/relations/info{?relationTypeGroup,toId,toType}",
            "toId": "toId",
            "toType": "toType",
            "deleteRelationsUsingDELETE": "DELETE /api/relations{?entityId,entityType}",
            "findByFromUsingGET": "GET /api/relations{?fromId,fromType,relationType,relationTypeGroup}",
            "relationType": "relationType",
            "findByFromUsingGET_1": "GET /api/relations{?fromId,fromType,relationTypeGroup}",
            "findByToUsingGET": "GET /api/relations{?relationType,relationTypeGroup,toId,toType}",
            "findByToUsingGET_1": "GET /api/relations{?relationTypeGroup,toId,toType}",
            "getRelationUsingGET": "GET /api/relation{?fromId,fromType,relationType,relationTypeGroup,toId,toType}",
            "deleteRelationUsingDELETE": "DELETE /api/relation{?fromId,fromType,relationType,relationTypeGroup,toId,toType}",
            "getCustomerEntityViewsUsingGET": "GET /api/customer/{customerId}/entityViews{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getEntityViewsByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/entityViews{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getEntityViewTypesUsingGET": "GET /api/entityView/types",
            "getEntityViewByIdUsingGET": "GET /api/entityView/{entityViewId}",
            "entityViewId": "entityViewId",
            "deleteEntityViewUsingDELETE": "DELETE /api/entityView/{entityViewId}",
            "findByQueryUsingPOST_4": "POST /api/entityViews",
            "getEntityViewsByIdsUsingGET": "GET /api/entityViews{?entityViewIds}",
            "entityViewIds": "entityViewIds",
            "saveEntityViewUsingPOST": "POST /api/entityView{?entityGroupId}",
            "getTenantEntityViewUsingGET": "GET /api/tenant/entityViews{?entityViewName}",
            "entityViewName": "entityViewName",
            "getTenantEntityViewsUsingGET": "GET /api/tenant/entityViews{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getUserEntityViewsUsingGET": "GET /api/user/entityViews{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "clearEventsUsingPOST": "POST /api/events/{entityType}/{entityId}/clear{?endTime,startTime}",
            "getEventsUsingGET_1": "GET /api/events/{entityType}/{entityId}/{eventType}{?endTime,page,pageSize,sortOrder,sortProperty,startTime,tenantId,textSearch}",
            "eventType": "eventType",
            "getEventsUsingGET": "GET /api/events/{entityType}/{entityId}{?endTime,page,pageSize,sortOrder,sortProperty,startTime,tenantId,textSearch}",
            "getEventsUsingPOST": "POST /api/events/{entityType}/{entityId}{?endTime,page,pageSize,sortOrder,sortProperty,startTime,tenantId,textSearch}",
            "getEntityGroupPermissionsUsingGET": "GET /api/entityGroup/{entityGroupId}/groupPermissions",
            "saveGroupPermissionUsingPOST": "POST /api/groupPermission",
            "getGroupPermissionInfoByIdUsingGET": "GET /api/groupPermission/info/{groupPermissionId}{?isUserGroup}",
            "groupPermissionId": "groupPermissionId",
            "isUserGroup": "isUserGroup",
            "getGroupPermissionByIdUsingGET": "GET /api/groupPermission/{groupPermissionId}",
            "deleteGroupPermissionUsingDELETE": "DELETE /api/groupPermission/{groupPermissionId}",
            "loadUserGroupPermissionInfosUsingPOST": "POST /api/userGroup/groupPermissions/info",
            "getUserGroupPermissionsUsingGET": "GET /api/userGroup/{userGroupId}/groupPermissions",
            "saveIntegrationUsingPOST": "POST /api/integration",
            "checkIntegrationConnectionUsingPOST": "POST /api/integration/check",
            "getIntegrationByRoutingKeyUsingGET": "GET /api/integration/routingKey/{routingKey}",
            "routingKey": "routingKey",
            "getIntegrationByIdUsingGET": "GET /api/integration/{integrationId}",
            "integrationId": "integrationId",
            "deleteIntegrationUsingDELETE": "DELETE /api/integration/{integrationId}",
            "getIntegrationsByIdsUsingGET": "GET /api/integrations{?integrationIds}",
            "integrationIds": "integrationIds",
            "getIntegrationsUsingGET": "GET /api/integrations{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getLwm2mBootstrapSecurityInfoUsingGET": "GET /api/lwm2m/deviceProfile/bootstrap/{isBootstrapServer}",
            "isBootstrapServer": "isBootstrapServer",
            "getClientRegistrationTemplatesUsingGET": "GET /api/oauth2/config/template",
            "saveClientRegistrationTemplateUsingPOST": "POST /api/oauth2/config/template",
            "deleteClientRegistrationTemplateUsingDELETE": "DELETE /api/oauth2/config/template/{clientRegistrationTemplateId}",
            "clientRegistrationTemplateId": "clientRegistrationTemplateId",
            "getOAuth2ClientsUsingPOST": "POST /api/noauth/oauth2Clients{?pkgName,platform}",
            "pkgName": "pkgName",
            "platform": "platform",
            "getCurrentOAuth2InfoUsingGET": "GET /api/oauth2/config",
            "saveOAuth2InfoUsingPOST": "POST /api/oauth2/config",
            "getLoginProcessingUrlUsingGET": "GET /api/oauth2/loginProcessingUrl",
            "saveOtaPackageInfoUsingPOST": "POST /api/otaPackage",
            "getOtaPackageInfoByIdUsingGET": "GET /api/otaPackage/info/{otaPackageId}",
            "getOtaPackageByIdUsingGET": "GET /api/otaPackage/{otaPackageId}",
            "deleteOtaPackageUsingDELETE": "DELETE /api/otaPackage/{otaPackageId}",
            "downloadOtaPackageUsingGET": "GET /api/otaPackage/{otaPackageId}/download",
            "saveOtaPackageDataUsingPOST": "POST /api/otaPackage/{otaPackageId}{?checksum,checksumAlgorithm}",
            "checksum": "checksum",
            "checksumAlgorithm": "checksumAlgorithm",
            "getGroupOtaPackagesUsingGET": "GET /api/otaPackages/group/{groupId}/{type}{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getOtaPackagesUsingGET_1": "GET /api/otaPackages/{deviceProfileId}/{type}{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getOtaPackagesUsingGET": "GET /api/otaPackages{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "changeOwnerToCustomerUsingPOST": "POST /api/owner/CUSTOMER/{ownerId}/{entityType}/{entityId}",
            "changeOwnerToTenantUsingPOST": "POST /api/owner/TENANT/{ownerId}/{entityType}/{entityId}",
            "getTenantQueuesByServiceTypeUsingGET": "GET /api/tenant/queues{?serviceType}",
            "serviceType": "serviceType",
            "downloadTestReportUsingPOST": "POST /api/report/test{?reportsServerEndpointUrl}",
            "reportsServerEndpointUrl": "reportsServerEndpointUrl",
            "downloadDashboardReportUsingPOST": "POST /api/report/{dashboardId}/download",
            "saveRoleUsingPOST": "POST /api/role",
            "getRoleByIdUsingGET": "GET /api/role/{roleId}",
            "deleteRoleUsingDELETE": "DELETE /api/role/{roleId}",
            "getRolesUsingGET": "GET /api/roles{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getRolesByIdsUsingGET": "GET /api/roles{?roleIds}",
            "roleIds": "roleIds",
            "handleOneWayDeviceRPCRequestUsingPOST": "POST /api/plugins/rpc/oneway/{deviceId}",
            "handleTwoWayDeviceRPCRequestUsingPOST": "POST /api/plugins/rpc/twoway/{deviceId}",
            "handleOneWayDeviceRPCRequestUsingPOST_1": "POST /api/rpc/oneway/{deviceId}",
            "getPersistedRpcByDeviceUsingGET": "GET /api/rpc/persistent/device/{deviceId}{?page,pageSize,rpcStatus,sortOrder,sortProperty,textSearch}",
            "rpcStatus": "rpcStatus",
            "getPersistedRpcUsingGET": "GET /api/rpc/persistent/{rpcId}",
            "rpcId": "rpcId",
            "deleteRpcUsingDELETE": "DELETE /api/rpc/persistent/{rpcId}",
            "handleTwoWayDeviceRPCRequestUsingPOST_1": "POST /api/rpc/twoway/{deviceId}",
            "assignRuleChainToEdgeUsingPOST": "POST /api/edge/{edgeId}/ruleChain/{ruleChainId}",
            "unassignRuleChainFromEdgeUsingDELETE": "DELETE /api/edge/{edgeId}/ruleChain/{ruleChainId}",
            "getEdgeRuleChainsUsingGET": "GET /api/edge/{edgeId}/ruleChains{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "saveRuleChainUsingPOST_1": "POST /api/ruleChain",
            "getAutoAssignToEdgeRuleChainsUsingGET": "GET /api/ruleChain/autoAssignToEdgeRuleChains",
            "saveRuleChainUsingPOST": "POST /api/ruleChain/device/default",
            "saveRuleChainMetaDataUsingPOST": "POST /api/ruleChain/metadata{?updateRelated}",
            "updateRelated": "updateRelated",
            "testScriptUsingPOST": "POST /api/ruleChain/testScript",
            "getRuleChainByIdUsingGET": "GET /api/ruleChain/{ruleChainId}",
            "deleteRuleChainUsingDELETE": "DELETE /api/ruleChain/{ruleChainId}",
            "setAutoAssignToEdgeRuleChainUsingPOST": "POST /api/ruleChain/{ruleChainId}/autoAssignToEdge",
            "unsetAutoAssignToEdgeRuleChainUsingDELETE": "DELETE /api/ruleChain/{ruleChainId}/autoAssignToEdge",
            "setEdgeTemplateRootRuleChainUsingPOST": "POST /api/ruleChain/{ruleChainId}/edgeTemplateRoot",
            "getRuleChainMetaDataUsingGET": "GET /api/ruleChain/{ruleChainId}/metadata",
            "getRuleChainOutputLabelsUsingGET": "GET /api/ruleChain/{ruleChainId}/output/labels",
            "getRuleChainOutputLabelsUsageUsingGET": "GET /api/ruleChain/{ruleChainId}/output/labels/usage",
            "setRootRuleChainUsingPOST": "POST /api/ruleChain/{ruleChainId}/root",
            "exportRuleChainsUsingGET": "GET /api/ruleChains/export{?limit}",
            "importRuleChainsUsingPOST": "POST /api/ruleChains/import{?overwrite}",
            "getRuleChainsUsingGET": "GET /api/ruleChains{?page,pageSize,sortOrder,sortProperty,textSearch,type}",
            "getLatestRuleNodeDebugInputUsingGET": "GET /api/ruleNode/{ruleNodeId}/debugIn",
            "ruleNodeId": "ruleNodeId",
            "handleRuleEngineRequestUsingPOST_2": "POST /api/rule-engine/",
            "handleRuleEngineRequestUsingPOST_1": "POST /api/rule-engine/{entityType}/{entityId}",
            "handleRuleEngineRequestUsingPOST": "POST /api/rule-engine/{entityType}/{entityId}/{timeout}",
            "timeout": "timeout",
            "getAllSchedulerEventsUsingGET": "GET /api/edge/{edgeId}/allSchedulerEvents",
            "assignSchedulerEventToEdgeUsingPOST": "POST /api/edge/{edgeId}/schedulerEvent/{schedulerEventId}",
            "schedulerEventId": "schedulerEventId",
            "unassignSchedulerEventFromEdgeUsingDELETE": "DELETE /api/edge/{edgeId}/schedulerEvent/{schedulerEventId}",
            "getEdgeSchedulerEventsUsingGET": "GET /api/edge/{edgeId}/schedulerEvents{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "saveSchedulerEventUsingPOST": "POST /api/schedulerEvent",
            "getSchedulerEventInfoByIdUsingGET": "GET /api/schedulerEvent/info/{schedulerEventId}",
            "getSchedulerEventByIdUsingGET": "GET /api/schedulerEvent/{schedulerEventId}",
            "deleteSchedulerEventUsingDELETE": "DELETE /api/schedulerEvent/{schedulerEventId}",
            "getSchedulerEventsByIdsUsingGET": "GET /api/schedulerEvents{?schedulerEventIds}",
            "schedulerEventIds": "schedulerEventIds",
            "getSchedulerEventsUsingGET": "GET /api/schedulerEvents{?type}",
            "getPrivacyPolicyUsingGET": "GET /api/noauth/selfRegistration/privacyPolicy",
            "getSignUpSelfRegistrationParamsUsingGET": "GET /api/noauth/selfRegistration/signUpSelfRegistrationParams{?pkgName}",
            "getTermsOfUseUsingGET": "GET /api/noauth/selfRegistration/termsOfUse",
            "getSelfRegistrationParamsUsingGET": "GET /api/selfRegistration/selfRegistrationParams",
            "saveSelfRegistrationParamsUsingPOST": "POST /api/selfRegistration/selfRegistrationParams",
            "deleteSelfRegistrationParamsUsingDELETE": "DELETE /api/selfRegistration/selfRegistrationParams/{domainName}",
            "domainName": "domainName",
            "activateUserByEmailCodeUsingPOST": "POST /api/noauth/activateByEmailCode{?emailCode,pkgName}",
            "emailCode": "emailCode",
            "activateEmailUsingGET": "GET /api/noauth/activateEmail{?emailCode,pkgName}",
            "activateCloudUserByEmailCodeUsingPOST": "POST /api/noauth/cloud/activateByEmailCode{?emailCode}",
            "activateCloudEmailUsingGET": "GET /api/noauth/cloud/activateEmail{?emailCode}",
            "resendCloudEmailActivationUsingPOST": "POST /api/noauth/cloud/resendEmailActivation{?email}",
            "email": "email",
            "mobileLoginUsingGET": "GET /api/noauth/login{?pkgName}",
            "resendEmailActivationUsingPOST": "POST /api/noauth/resendEmailActivation{?email,pkgName}",
            "signUpUsingPOST": "POST /api/noauth/signup",
            "getRecaptchaPublicKeyUsingGET": "GET /api/noauth/signup/recaptchaPublicKey",
            "acceptPrivacyPolicyUsingPOST": "POST /api/signup/acceptPrivacyPolicy",
            "acceptPrivacyPolicyAndTermsOfUseUsingPOST": "POST /api/signup/acceptPrivacyPolicyAndTermsOfUse",
            "acceptTermsOfUseUsingPOST": "POST /api/signup/acceptTermsOfUse",
            "isDisplayWelcomeUsingGET": "GET /api/signup/displayWelcome",
            "setNotDisplayWelcomeUsingPOST": "POST /api/signup/notDisplayWelcome",
            "privacyPolicyAcceptedUsingGET": "GET /api/signup/privacyPolicyAccepted",
            "deleteTenantAccountUsingPOST": "POST /api/signup/tenantAccount",
            "termsOfUseAcceptedUsingGET": "GET /api/signup/termsOfUseAccepted",
            "getSolutionTemplateDetailsUsingGET": "GET /api/solutions/templates/details/{solutionTemplateId}",
            "solutionTemplateId": "solutionTemplateId",
            "getSolutionTemplateInfosUsingGET": "GET /api/solutions/templates/infos",
            "getSolutionTemplateInstructionsUsingGET": "GET /api/solutions/templates/instructions/{solutionTemplateId}",
            "uninstallSolutionTemplateUsingDELETE": "DELETE /api/solutions/templates/{solutionTemplateId}/delete",
            "installSolutionTemplateUsingPOST": "POST /api/solutions/templates/{solutionTemplateId}/install",
            "getTenantProfileDataUsingGET": "GET /api/tenant/subscription/data",
            "getTenantSubscriptionUsageUsingGET": "GET /api/tenant/subscription/usage",
            "getTenantProfileDataByIdUsingGET": "GET /api/tenantProfile/{tenantProfileId}/data",
            "tenantProfileId": "tenantProfileId",
            "saveResourceUsingPOST": "POST /api/resource",
            "getResourceInfoByIdUsingGET": "GET /api/resource/info/{resourceId}",
            "resourceId": "resourceId",
            "getLwm2mListObjectsPageUsingGET": "GET /api/resource/lwm2m/page{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getLwm2mListObjectsUsingGET": "GET /api/resource/lwm2m{?objectIds,sortOrder,sortProperty}",
            "objectIds": "objectIds",
            "getResourceByIdUsingGET": "GET /api/resource/{resourceId}",
            "deleteResourceUsingDELETE": "DELETE /api/resource/{resourceId}",
            "downloadResourceUsingGET": "GET /api/resource/{resourceId}/download",
            "getResourcesUsingGET": "GET /api/resource{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "saveDeviceAttributesUsingPOST": "POST /api/plugins/telemetry/{deviceId}/{scope}",
            "scope": "scope",
            "deleteDeviceAttributesUsingDELETE": "DELETE /api/plugins/telemetry/{deviceId}/{scope}{?keys}",
            "keys": "keys",
            "saveEntityAttributesV2UsingPOST": "POST /api/plugins/telemetry/{entityType}/{entityId}/attributes/{scope}",
            "getAttributeKeysUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/keys/attributes",
            "getAttributeKeysByScopeUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/keys/attributes/{scope}",
            "getTimeseriesKeysUsingGET_1": "GET /api/plugins/telemetry/{entityType}/{entityId}/keys/timeseries",
            "deleteEntityTimeseriesUsingDELETE": "DELETE /api/plugins/telemetry/{entityType}/{entityId}/timeseries/delete{?deleteAllDataForKeys,endTs,keys,rewriteLatestIfDeleted,startTs}",
            "deleteAllDataForKeys": "deleteAllDataForKeys",
            "startTs": "startTs",
            "endTs": "endTs",
            "rewriteLatestIfDeleted": "rewriteLatestIfDeleted",
            "saveEntityTelemetryWithTTLUsingPOST": "POST /api/plugins/telemetry/{entityType}/{entityId}/timeseries/{scope}/{ttl}?scope=ANY",
            "ttl": "ttl",
            "saveEntityTelemetryUsingPOST": "POST /api/plugins/telemetry/{entityType}/{entityId}/timeseries/{scope}?scope=ANY",
            "getAttributesByScopeUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/values/attributes/{scope}{?keys}",
            "getAttributesUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/values/attributes{?keys}",
            "getTimeseriesUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/values/timeseries{?agg,endTs,interval,keys,limit,orderBy,startTs,useStrictDataTypes}",
            "interval": "interval",
            "agg": "agg",
            "orderBy": "orderBy",
            "useStrictDataTypes": "useStrictDataTypes",
            "getLatestTimeseriesUsingGET": "GET /api/plugins/telemetry/{entityType}/{entityId}/values/timeseries{?keys,useStrictDataTypes}",
            "saveEntityAttributesV1UsingPOST": "POST /api/plugins/telemetry/{entityType}/{entityId}/{scope}",
            "deleteEntityAttributesUsingDELETE": "DELETE /api/plugins/telemetry/{entityType}/{entityId}/{scope}{?keys}",
            "saveTenantUsingPOST": "POST /api/tenant",
            "getTenantInfoByIdUsingGET": "GET /api/tenant/info/{tenantId}",
            "getTenantByIdUsingGET": "GET /api/tenant/{tenantId}",
            "deleteTenantUsingDELETE": "DELETE /api/tenant/{tenantId}",
            "getTenantInfosUsingGET": "GET /api/tenantInfos{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantsUsingGET": "GET /api/tenants{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantsByIdsUsingGET": "GET /api/tenants{?tenantIds}",
            "tenantIds": "tenantIds",
            "saveTenantProfileUsingPOST": "POST /api/tenantProfile",
            "getTenantProfileByIdUsingGET": "GET /api/tenantProfile/{tenantProfileId}",
            "deleteTenantProfileUsingDELETE": "DELETE /api/tenantProfile/{tenantProfileId}",
            "setDefaultTenantProfileUsingPOST": "POST /api/tenantProfile/{tenantProfileId}/default",
            "getDefaultTenantProfileInfoUsingGET": "GET /api/tenantProfileInfo/default",
            "getTenantProfileInfoByIdUsingGET": "GET /api/tenantProfileInfo/{tenantProfileId}",
            "getTenantProfileInfosUsingGET": "GET /api/tenantProfileInfos{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantProfilesUsingGET": "GET /api/tenantProfiles{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getHelpBaseUrlUsingGET": "GET /api/uiSettings/helpBaseUrl",
            "getAllCustomerUsersUsingGET": "GET /api/customer/users{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getCustomerUsersUsingGET": "GET /api/customer/{customerId}/users{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getUsersByEntityGroupIdUsingGET": "GET /api/entityGroup/{entityGroupId}/users{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getTenantAdminsUsingGET": "GET /api/tenant/{tenantId}/users{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "sendActivationEmailUsingPOST": "POST /api/user/sendActivationMail{?email}",
            "isUserTokenAccessEnabledUsingGET": "GET /api/user/tokenAccessEnabled",
            "getUserUsersUsingGET": "GET /api/user/users{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "getUserByIdUsingGET": "GET /api/user/{userId}",
            "deleteUserUsingDELETE": "DELETE /api/user/{userId}",
            "getActivationLinkUsingGET": "GET /api/user/{userId}/activationLink",
            "getUserTokenUsingGET": "GET /api/user/{userId}/token",
            "setUserCredentialsEnabledUsingPOST": "POST /api/user/{userId}/userCredentialsEnabled{?userCredentialsEnabled}",
            "userCredentialsEnabled": "userCredentialsEnabled",
            "getUsersByIdsUsingGET": "GET /api/users{?userIds}",
            "userIds": "userIds",
            "saveUserUsingPOST": "POST /api/user{?entityGroupId,sendActivationMail}",
            "getAllowedPermissionsUsingGET": "GET /api/permissions/allowedPermissions",
            "getLoginWhiteLabelParamsUsingGET": "GET /api/noauth/whiteLabel/loginWhiteLabelParams{?faviconChecksum,logoImageChecksum}",
            "logoImageChecksum": "logoImageChecksum",
            "faviconChecksum": "faviconChecksum",
            "tenantWhiteLabelingAllowedUsingGET": "GET /api/tenant/whiteLabelingAllowed",
            "getCurrentLoginWhiteLabelParamsUsingGET": "GET /api/whiteLabel/currentLoginWhiteLabelParams",
            "getCurrentWhiteLabelParamsUsingGET": "GET /api/whiteLabel/currentWhiteLabelParams",
            "isCustomerWhiteLabelingAllowedUsingGET": "GET /api/whiteLabel/isCustomerWhiteLabelingAllowed",
            "isWhiteLabelingAllowedUsingGET": "GET /api/whiteLabel/isWhiteLabelingAllowed",
            "saveLoginWhiteLabelParamsUsingPOST": "POST /api/whiteLabel/loginWhiteLabelParams",
            "previewWhiteLabelParamsUsingPOST": "POST /api/whiteLabel/previewWhiteLabelParams",
            "saveWhiteLabelParamsUsingPOST": "POST /api/whiteLabel/whiteLabelParams",
            "getWhiteLabelParamsUsingGET": "GET /api/whiteLabel/whiteLabelParams{?faviconChecksum,logoImageChecksum}",
            "saveWidgetTypeUsingPOST": "POST /api/widgetType",
            "getWidgetTypeByIdUsingGET": "GET /api/widgetType/{widgetTypeId}",
            "widgetTypeId": "widgetTypeId",
            "deleteWidgetTypeUsingDELETE": "DELETE /api/widgetType/{widgetTypeId}",
            "getBundleWidgetTypesDetailsUsingGET": "GET /api/widgetTypesDetails{?bundleAlias,isSystem}",
            "isSystem": "isSystem",
            "bundleAlias": "bundleAlias",
            "getBundleWidgetTypesInfosUsingGET": "GET /api/widgetTypesInfos{?bundleAlias,isSystem}",
            "getBundleWidgetTypesUsingGET": "GET /api/widgetTypes{?bundleAlias,isSystem}",
            "getWidgetTypeUsingGET": "GET /api/widgetType{?alias,bundleAlias,isSystem}",
            "alias": "alias",
            "saveWidgetsBundleUsingPOST": "POST /api/widgetsBundle",
            "getWidgetsBundleByIdUsingGET": "GET /api/widgetsBundle/{widgetsBundleId}",
            "widgetsBundleId": "widgetsBundleId",
            "deleteWidgetsBundleUsingDELETE": "DELETE /api/widgetsBundle/{widgetsBundleId}",
            "getWidgetsBundlesUsingGET": "GET /api/widgetsBundles",
            "getWidgetsBundlesUsingGET_1": "GET /api/widgetsBundles{?page,pageSize,sortOrder,sortProperty,textSearch}",
            "optionalParameters": "任意項目"
        }
    }
}